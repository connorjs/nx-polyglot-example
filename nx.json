{
	"$schema": "./node_modules/nx/schemas/nx-schema.json",
	"affected": {
		"defaultBase": "main"
	},
	"namedInputs": {
		"css": ["{projectRoot}/**/*.css"],
		"default": ["{projectRoot}/**/*"],
		"rootTsConfig": [
			"{workspaceRoot}/.config/ts/tsconfig.json",
			"{workspaceRoot}/tsconfig.json"
		],
		"typescript": ["{projectRoot}/**/*.{ts,tsx}", "{projectRoot}/tsconfig.json"]
	},
	"targetDefaults": {
		"clean": {
			"cache": false,
			"executor": "nx:run-commands",
			"options": {
				// shx if needed
				"command": "rm -rf build dist",
				"cwd": "{projectRoot}"
			}
		},
		"codegen": {
			// Create codegen target as a no-op, so that other `targetDefaults` can reference it
			"executor": "nx:noop"
		},
		"csharpier": {
			"cache": true,
			"executor": "nx:run-commands",
			"options": {
				"command": "dotnet csharpier --check {projectRoot}"
			}
		},
		"eslint": {
			"cache": true,
			"dependsOn": ["^tsc", "codegen"],
			"executor": "nx:run-commands",
			"options": {
				"command": "eslint -f pretty {projectRoot}"
			}
		},
		"prettier": {
			"cache": true,
			"executor": "nx:run-commands",
			"options": {
				"command": "prettier --check '{projectRoot}/**/*.{cjs,css,cts,graphql,html,js,json,jsonc,jsx,md,pcss,scss,ts,tsp,tsx,yaml,yml}'"
			}
		},
		"tsc": {
			"cache": true,
			"dependsOn": ["^tsc", "codegen"],
			"executor": "nx:run-commands",
			"inputs": ["rootTsConfig", "typescript"],
			"options": {
				"command": "tsc --build {projectRoot}"
			},
			"outputs": ["{projectRoot}/build/tsc"]
		}
	},
	"workspaceLayout": {
		"appsDir": "apps",
		"libsDir": "libs"
	}
}
